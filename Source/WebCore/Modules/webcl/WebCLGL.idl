/*
 * Copyright (C) 2013 Samsung Electronics Corporation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY SAMSUNG ELECTRONICS CORPORATION AND ITS
 * CONTRIBUTORS "AS IS", AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
 * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SAMSUNG
 * ELECTRONICS CORPORATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES(INCLUDING
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS, OR BUSINESS INTERRUPTION), HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT(INCLUDING
 * NEGLIGENCE OR OTHERWISE ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
typedef unsigned long CLenum;
typedef long CLint;

[
    Conditional=WEBCL&WEBGL,
    //OmitConstructor,
    DoNotCheckConstants,
    JSGenerateToJSObject,
    JSGenerateToNativeObject,
] interface WebCLGL : WebCL {
    [StrictTypeChecking, Custom, RaisesException] WebCLGLContext createContext(optional WebCLContextProperties properties);

    /* Error Codes */
    const CLint INVALID_GL_OBJECT                         = -60;
    const CLint INVALID_MIP_LEVEL                         = -62;

    /* cl_command_type */
    const CLenum COMMAND_ACQUIRE_GL_OBJECTS                = 0x11FF;
    const CLenum COMMAND_RELEASE_GL_OBJECTS                = 0x1200;

    /* cl_gl_object_type */
    const CLenum GL_OBJECT_BUFFER                          = 0x2000;
    const CLenum GL_OBJECT_TEXTURE2D                       = 0x2001;
    const CLenum GL_OBJECT_RENDERBUFFER                    = 0x2003;

    /* cl_gl_texture_info */
    const CLenum GL_TEXTURE_TARGET                         = 0x2004;
    const CLenum GL_MIPMAP_LEVEL                           = 0x2005;
};

